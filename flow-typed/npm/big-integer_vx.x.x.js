// flow-typed signature: 74edd59bcb489eb096ff7f02ca094709
// flow-typed version: <<STUB>>/big-integer_v1.6.48/flow_v0.138.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'big-integer'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'big-integer' {
  declare class QuotAndRem {
    quotient: BigInteger;
    remainder: BigInteger;
  }

  declare export class BigInteger {
    isEven(): boolean;
    add(number | BigInteger): BigInteger;
    subtract(number | BigInteger): BigInteger;
    prev(): BigInteger;
    next(): BigInteger;
    equals(number | BigInteger): boolean;
    lt(number | BigInteger): boolean;
    mod(number | BigInteger): BigInteger;
    divide(number | BigInteger): BigInteger;
    multiply(number | BigInteger): BigInteger;
    divide(number | BigInteger): BigInteger;
    divmod(number | BigInteger): QuotAndRem;
    pow(number | BigInteger): BigInteger;
    compare(number | BigInteger): number;
    shiftRight(number | BigInteger): BigInteger;
    toJSNumber(): number;
  }

  declare export default class bigInt {
    static (number | string): BigInteger;
    static zero: BigInteger;
    static one: BigInteger;
    static gcd(a: number | BigInteger, b: number | BigInteger): BigInteger;
  }
}
